<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Time Value of Money with Day Timer</title>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
<style>
:root{
  --accent:#006be6; --bg:#fff; --card:#f7f9fb; --fg:#222; --muted:#6c757d;
  --radius:14px; --shadow:0 6px 18px rgba(0,0,0,.08);
  font-family:"Inter",system-ui,Arial,sans-serif; color:var(--fg);
}
html,body{margin:0; background:var(--bg); display:flex; flex-direction:column; align-items:center}
h1{margin:26px 0 4px; font-weight:700; color:var(--accent); letter-spacing:-.4px}
#strap{margin-bottom:32px; color:var(--muted); text-align:center; line-height:1.35}
#mainPanel{display:flex; flex-wrap:wrap; gap:48px; justify-content:center; margin:20px 0 34px}
.card{background:var(--card); padding:26px 32px 34px; border-radius:var(--radius);
      box-shadow:var(--shadow); text-align:center; min-width:220px}
.cardTitle{font-size:.93rem; color:var(--muted); margin-bottom:6px}
.bigNum{font-size:2.25rem; font-weight:700; color:var(--accent); letter-spacing:.5px}
canvas{background:#fff; border:4px solid var(--accent); border-radius:50%}
#controls,#userProfile{width:min(880px,92%); display:flex; flex-wrap:wrap; gap:10px;
                       justify-content:center; margin-bottom:14px}
input,select,button{font:inherit}
input,select{padding:8px 12px; border:1px solid #ccc; border-radius:var(--radius);
               background:#fff; min-width:160px}
button{padding:8px 16px; border:none; border-radius:var(--radius);
       background:var(--accent); color:#fff; cursor:pointer; box-shadow:var(--shadow);
       transition:background .15s}
button:hover:not([disabled]){background:#0054b4}
button[disabled]{opacity:.5; cursor:not-allowed}
#selectorBox{display:none; background:var(--card); box-shadow:var(--shadow);
             padding:20px 26px; border-radius:var(--radius);
             width:min(300px,90%); margin-bottom:40px}
.chkRow{display:flex; align-items:center; gap:6px; margin:4px 0; font-size:.9rem}
#reportZone,#daySummary{width:min(900px,95%); margin:20px auto}
table{width:100%; border-collapse:collapse; font-size:.95rem;
      background:#fff; box-shadow:var(--shadow)}
th,td{padding:8px 12px; text-align:left}
th{background:var(--accent); color:#fff}
tr:nth-child(odd){background:#f1f3f5}
tfoot td{font-weight:700; background:#e3eef4}
</style>
</head>
<body>

<h1>Time Value of Money</h1>
<div id="strap">
  <div id="subDate"></div>
  <div>Annual goal: $52 000 000 â€¢ Hourly worth: $5 936.10</div>
</div>

<!-- USER PROFILE -->
<div id="userProfile">
  <input id="userName"    placeholder="Your name">
  <input id="userCompany" placeholder="Company">
  <input id="userEmail"   placeholder="E-mail">
</div>

<!-- MAIN CARDS -->
<div id="mainPanel">

  <!-- WORK DAY -->
  <div class="card">
    <div class="cardTitle">Work Day</div>
    <div id="dayTime" class="bigNum" style="font-size:1.8rem">00 h 00 m 00 s</div>
  </div>

  <!-- CHRONO-DIAL -->
  <div class="card">
    <div class="cardTitle">Chrono-Dial</div>
    <canvas id="clock" width="200" height="200"></canvas>
  </div>

  <!-- TIME VALUE -->
  <div class="card">
    <div class="cardTitle">Time Value of Money</div>
    <div id="moneyHour" class="bigNum" style="margin-bottom:12px">$0.00</div>
    <canvas id="progress" width="180" height="180"></canvas>
  </div>

  <!-- PROJECT TIMER -->
  <div class="card">
    <div id="projTitle" class="cardTitle">No active project</div>
    <div id="projTime"  class="bigNum" style="font-size:1.8rem">00 h 00 m 00 s</div>
    <div id="projMoney" class="bigNum">$0.00</div>
  </div>

</div>

<!-- CONTROLS -->
<div id="controls">

  <!-- DAY CONTROLS -->
  <button id="dayStartBtn">Clock In</button>
  <button id="dayStopBtn" disabled>Clock Out</button>

  <!-- PROJECT CONTROLS -->
  <input id="newProj" placeholder="New project name">
  <button id="startBtn">Start</button>
  <button id="stopBtn" disabled>Stop</button>
  <select id="picker"></select>
  <button id="reportBtn">Show report</button>
</div>

<!-- CSV SELECTION -->
<div id="selectorBox">
  <h3>Choose projects for CSV</h3>
  <div class="chkRow">
    <input type="checkbox" id="chkAll">
    <label for="chkAll"><strong>Select All</strong></label>
  </div>
  <div id="chkList"></div>
  <button id="csvBtn" style="margin-top:12px" disabled>Download CSV</button>
</div>

<!-- REPORT & DAY SUMMARY -->
<div id="reportZone"></div>
<div id="daySummary"></div>

<script>
const $ = id => document.getElementById(id);
const HOURLY_RATE = 5936.10, MS_HOUR = 3600000;

/* STATE */
let dayActive=false, dayStart=0, dayStop=0;
let projects={}, activeProj=null, lastProj=null;
let colorPool=[
  '#ff595e','#ffca3a','#8ac926','#1982c4','#6a4c93',
  '#ef476f','#ffd166','#06d6a0','#26547c','#ff9f1c'
];

/* INIT */
$('subDate').textContent = new Date().toLocaleString();

/* HELPERS */
function pad(n){ return String(n).padStart(2,'0'); }
function hms(h){
  const H=Math.floor(h), M=Math.floor((h-H)*60), S=Math.floor(((h-H)*60-M)*60);
  return `${pad(H)} h ${pad(M)} m ${pad(S)} s`;
}

/* WORK DAY */
function startDay(){
  dayActive=true; dayStart=Date.now(); dayStop=0;
  $('dayStartBtn').disabled=true; $('dayStopBtn').disabled=false;
  $('selectorBox').style.display='none';
}
function stopDay(){
  dayActive=false; dayStop=Date.now();
  $('dayStartBtn').disabled=false; $('dayStopBtn').disabled=true;
  renderDaySummary();
  $('selectorBox').style.display='block';
}
function updateDayUI(){
  const ms = dayActive
    ? (Date.now() - dayStart)
    : (dayStop>dayStart ? dayStop - dayStart : 0);
  const hrs = ms / MS_HOUR, H=Math.floor(hrs),
        M=Math.floor((hrs-H)*60), S=Math.floor(((hrs-H)*60-M)*60);
  $('dayTime').textContent = `${pad(H)} h ${pad(M)} m ${pad(S)} s`;
}

/* CHRONO-DIAL */
const cvClock = $('clock'),
      ctxClock = cvClock.getContext('2d');
ctxClock.translate(100,100);
function drawClock(){
  const r=96;
  ctxClock.clearRect(-102,-102,204,204);
  ctxClock.fillStyle='#fff'; ctxClock.beginPath(); ctxClock.arc(0,0,r,0,2*Math.PI); ctxClock.fill();
  ctxClock.strokeStyle='#ddd'; ctxClock.lineWidth=2;
  for(let i=0;i<60;i++){
    const a=i*Math.PI/30, L=i%5?7:13;
    ctxClock.beginPath();
    ctxClock.moveTo((r-10)*Math.cos(a),(r-10)*Math.sin(a));
    ctxClock.lineTo((r-10-L)*Math.cos(a),(r-10-L)*Math.sin(a));
    ctxClock.stroke();
  }
  const frac=(Date.now()%MS_HOUR)/MS_HOUR,
        ang=2*Math.PI*frac - Math.PI/2;
  ctxClock.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue('--accent');
  ctxClock.lineWidth=4; ctxClock.beginPath(); ctxClock.moveTo(0,0);
  ctxClock.lineTo((r-26)*Math.cos(ang),(r-26)*Math.sin(ang)); ctxClock.stroke();
}

/* PROGRESS GAUGE */
const cvProg = $('progress'),
      ctxProg = cvProg.getContext('2d');
ctxProg.translate(90,90);
let rewind=0, prevInto=Date.now()%MS_HOUR;
function drawGauge(){
  const into = Date.now()%MS_HOUR;
  if(into < prevInto) rewind = 3000;
  prevInto = into;
  rewind = rewind>0? Math.max(0,rewind-16) : 0;
  const frac = rewind>0? rewind/3000 : into/MS_HOUR,
        r=70;
  ctxProg.clearRect(-92,-92,184,184);
  ctxProg.strokeStyle='#eee'; ctxProg.lineWidth=14;
  ctxProg.beginPath(); ctxProg.arc(0,0,r,0,2*Math.PI); ctxProg.stroke();
  ctxProg.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue('--accent');
  ctxProg.lineWidth=14; ctxProg.lineCap='round';
  ctxProg.beginPath();
  ctxProg.arc(0,0,r,-Math.PI/2,-Math.PI/2+2*Math.PI*frac);
  ctxProg.stroke();
  $('moneyHour').textContent = '$'+(HOURLY_RATE*frac).toFixed(2);
}

/* PROJECTS */
function syncPicker(){
  const sel = $('picker');
  sel.innerHTML = '';
  Object.keys(projects).forEach(n=>{
    const o=document.createElement('option');
    o.value=o.textContent=n;
    sel.appendChild(o);
  });
}
function syncCheckboxList(){
  const L=$('chkList');
  L.innerHTML='';
  Object.keys(projects).forEach((n,i)=>{
    const id='chk_'+i, row=document.createElement('div');
    row.className='chkRow';
    row.innerHTML=`
      <input type="checkbox" id="${id}" data-name="${n}">
      <label for="${id}">${n}</label>`;
    L.appendChild(row);
  });
  refreshCSVBtn();
}
function refreshCSVBtn(){
  const any = [...document.querySelectorAll('#chkList input')].some(c=>c.checked)
            || $('chkAll').checked;
  $('csvBtn').disabled = !any;
}

/* PROJECT TIMER */
function startProj(){
  const name = $('newProj').value.trim()||$('picker').value;
  if(!name) return alert('Enter or pick a project.');
  if(activeProj) stopProj(false);
  if(!projects[name])
    projects[name] = {msTotal:0, running:false, started:0, color: colorPool.shift()};
  Object.values(projects).forEach(p=>p.running=false);
  const p=projects[name];
  p.running=true; p.started=Date.now();
  activeProj=name; lastProj=null;
  $('stopBtn').disabled=false; $('newProj').value='';
  syncPicker(); syncCheckboxList();
}
function stopProj(clearUI=true){
  if(!activeProj) return;
  const p=projects[activeProj];
  p.msTotal += Date.now() - p.started;
  p.running=false;
  lastProj=activeProj; activeProj=null;
  $('stopBtn').disabled=true;
  if(clearUI) $('projTitle').textContent='Paused: '+lastProj;
}
function updateProjUI(){
  const show=activeProj||lastProj;
  if(!show){
    $('projTitle').textContent='No active project';
    $('projTime').textContent='00 h 00 m 00 s';
    $('projMoney').textContent='$0.00';
    return;
  }
  const p=projects[show],
        ms=p.msTotal + (p.running?(Date.now()-p.started):0),
        hrs=ms/3_600_000, val=hrs*HOURLY_RATE;
  $('projTitle').textContent=(p.running?'Active: ':'Paused: ')+show;
  $('projTime').textContent=hms(hrs);
  $('projMoney').textContent='$'+val.toFixed(2);
}

/* REPORT */
function buildReport(){
  const Z=$('reportZone'), names=Object.keys(projects);
  if(!dayStart){
    Z.innerHTML='<p><em>Clock in to start your day.</em></p>'; return;
  }
  let html='<table><thead><tr><th>Project</th><th>Hours</th><th>Value($)</th></tr></thead><tbody>',
      sumH=0;
  names.forEach(n=>{
    const p=projects[n],
          ms=p.msTotal + (p.running?(Date.now()-p.started):0),
          hrs=ms/3_600_000, val=hrs*HOURLY_RATE;
    sumH+=hrs;
    html+=`<tr><td>${n}</td><td>${hrs.toFixed(3)}</td><td>${val.toFixed(2)}</td></tr>`;
  });
  html+=`</tbody><tfoot><tr><td>TOTAL</td><td>${sumH.toFixed(3)}</td>
          <td>${(sumH*HOURLY_RATE).toFixed(2)}</td></tr></tfoot></table>`;
  Z.innerHTML=html;
}

/* DAY SUMMARY */
function renderDaySummary(){
  const D=$('daySummary');
  if(!dayStop) return;
  const startT=new Date(dayStart), endT=new Date(dayStop),
        dayMs=dayStop-dayStart, dayH=dayMs/3_600_000,
        dayVal=dayH*HOURLY_RATE;
  let projMs=0;
  Object.values(projects).forEach(p=>{
    projMs+=p.msTotal + (p.running?(Date.now()-p.started):0);
  });
  const projH=projMs/3_600_000, projVal=projH*HOURLY_RATE,
        idleH=Math.max(0, dayH-projH), idleVal=idleH*HOURLY_RATE;
  D.innerHTML=`
    <table><tbody>
      <tr><th>Day start:</th><td>${startT.toLocaleTimeString()}</td>
          <th>Day end:</th><td>${endT.toLocaleTimeString()}</td></tr>
      <tr><th>Total day:</th><td>${dayH.toFixed(3)} h</td>
          <th>Day value:</th><td>$${dayVal.toFixed(2)}</td></tr>
      <tr><th>Projects:</th><td>${projH.toFixed(3)} h</td>
          <th>Project value:</th><td>$${projVal.toFixed(2)}</td></tr>
      <tr><th>Idle:</th><td>${idleH.toFixed(3)} h</td>
          <th>Idle value:</th><td>$${idleVal.toFixed(2)}</td></tr>
    </tbody></table>`;
}

/* CSV EXPORT */
function csvContent(selectedProjects) {
  const now     = new Date(),
        dateStr = now.toLocaleDateString(),
        timeStr = now.toLocaleTimeString();

  const goalLine= 'Annual goal: $52 000 000 â€¢ Hourly worth: $5 936.10',
        name    = $('userName').value    || '',
        company = $('userCompany').value || '',
        email   = $('userEmail').value   || '';

  const startT  = new Date(dayStart).toLocaleTimeString(),
        endT    = new Date(dayStop).toLocaleTimeString(),
        dayH    = ((dayStop-dayStart)/3_600_000),
        dayVal  = dayH*HOURLY_RATE;

  let projMs=0;
  selectedProjects.forEach(n=>{
    const p=projects[n];
    projMs += p.msTotal + (p.running?(Date.now()-p.started):0);
  });
  const projH   = projMs/3_600_000,
        projVal = projH*HOURLY_RATE,
        idleH   = Math.max(0, dayH-projH),
        idleVal = idleH*HOURLY_RATE;

  // Build lines
  const lines = [];

  // Header metadata
  lines.push('Time Value of Money,');
  lines.push(`${dateStr},${timeStr}`);
  lines.push(`${goalLine},`);
  lines.push(`${name},`);
  lines.push(`${company},`);
  lines.push(`${email},`);
  lines.push(','); // blank

  // Day summary lines
  lines.push(`Day start:,${startT}`);
  lines.push(`Day end:,${endT}`);
  lines.push(`Total day:,${dayH.toFixed(3)} h`);
  lines.push(`Day value:,$${dayVal.toFixed(2)}`);
  lines.push(`Projects:,${projH.toFixed(3)} h`);
  lines.push(`Project value:,$${projVal.toFixed(2)}`);
  lines.push(`Idle:,${idleH.toFixed(3)} h`);
  lines.push(`Idle value:,$${idleVal.toFixed(2)}`);
  lines.push(','); // blank

  // Project table
  lines.push('Project,Hours,Value($)');
  selectedProjects.forEach(n=>{
    const p = projects[n],
          ms = p.msTotal + (p.running?(Date.now()-p.started):0),
          hrs= ms/3_600_000,
          val= hrs*HOURLY_RATE;
    lines.push(`${n},${hrs.toFixed(3)},${val.toFixed(2)}`);
  });
  lines.push(`TOTAL,${projH.toFixed(3)},${projVal.toFixed(2)}`);

  return lines.join('\n');
}

function downloadCSV(){
  const all = $('chkAll').checked;
  const selected = all
    ? Object.keys(projects)
    : [...document.querySelectorAll('#chkList input:checked')]
        .map(cb => cb.dataset.name);

  if(!dayStop){
    alert('Please Clock Out first.');
    return;
  }
  if(!selected.length){
    alert('Select at least one project.');
    return;
  }

  const csv = csvContent(selected);
  const blob= new Blob([csv], {type:'text/csv'});
  const a   = document.createElement('a');
  const fn  = `TVOM_${new Date().toISOString().slice(0,19).replace(/[:T]/g,'-')}.csv`;
  a.href     = URL.createObjectURL(blob);
  a.download = fn;
  a.click();
  URL.revokeObjectURL(a.href);
}

/* HOOKS */
$('dayStartBtn').onclick = startDay;
$('dayStopBtn').onclick  = stopDay;
$('startBtn').onclick    = startProj;
$('stopBtn').onclick     = ()=>stopProj(true);
$('picker').onchange      = ()=>{$('newProj').value='';};
$('reportBtn').onclick   = buildReport;
$('chkAll').onclick       = function(){
  document.querySelectorAll('#chkList input')
          .forEach(c=>c.checked=this.checked);
  refreshCSVBtn();
};
$('csvBtn').onclick      = downloadCSV;
document.addEventListener('change', e=>{
  if(e.target.closest('#chkList')){
    const allChecked = [...document.querySelectorAll('#chkList input')]
                        .every(c=>c.checked);
    $('chkAll').checked = allChecked;
    refreshCSVBtn();
  }
});

/* SYNC & LOOP */
function syncAll(){ syncPicker(); syncCheckboxList(); }
syncAll();

(function loop(){
  drawClock(); drawGauge(); updateDayUI(); updateProjUI();
  requestAnimationFrame(loop);
})();
</script>
</body>
</html>